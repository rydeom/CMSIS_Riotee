// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type StablehloCustomCallOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsStablehloCustomCallOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloCustomCallOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &StablehloCustomCallOptions{}
	x.Init(buf, n+offset)
	return x
}

func FinishStablehloCustomCallOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsStablehloCustomCallOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloCustomCallOptions {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &StablehloCustomCallOptions{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedStablehloCustomCallOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *StablehloCustomCallOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *StablehloCustomCallOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *StablehloCustomCallOptions) CallTargetName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *StablehloCustomCallOptions) HasSideEffect() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

func (rcv *StablehloCustomCallOptions) MutateHasSideEffect(n bool) bool {
	return rcv._tab.MutateBoolSlot(6, n)
}

func (rcv *StablehloCustomCallOptions) BackendConfig() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *StablehloCustomCallOptions) ApiVersion() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *StablehloCustomCallOptions) MutateApiVersion(n int32) bool {
	return rcv._tab.MutateInt32Slot(10, n)
}

func (rcv *StablehloCustomCallOptions) CalledComputations(j int) int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *StablehloCustomCallOptions) CalledComputationsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloCustomCallOptions) MutateCalledComputations(j int, n int32) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt32(a+flatbuffers.UOffsetT(j*4), n)
	}
	return false
}

func (rcv *StablehloCustomCallOptions) CustomAttributes(j int) byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetByte(a + flatbuffers.UOffsetT(j*1))
	}
	return 0
}

func (rcv *StablehloCustomCallOptions) CustomAttributesLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloCustomCallOptions) CustomAttributesBytes() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *StablehloCustomCallOptions) MutateCustomAttributes(j int, n byte) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateByte(a+flatbuffers.UOffsetT(j*1), n)
	}
	return false
}

func StablehloCustomCallOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(6)
}
func StablehloCustomCallOptionsAddCallTargetName(builder *flatbuffers.Builder, callTargetName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(callTargetName), 0)
}
func StablehloCustomCallOptionsAddHasSideEffect(builder *flatbuffers.Builder, hasSideEffect bool) {
	builder.PrependBoolSlot(1, hasSideEffect, false)
}
func StablehloCustomCallOptionsAddBackendConfig(builder *flatbuffers.Builder, backendConfig flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(backendConfig), 0)
}
func StablehloCustomCallOptionsAddApiVersion(builder *flatbuffers.Builder, apiVersion int32) {
	builder.PrependInt32Slot(3, apiVersion, 0)
}
func StablehloCustomCallOptionsAddCalledComputations(builder *flatbuffers.Builder, calledComputations flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(calledComputations), 0)
}
func StablehloCustomCallOptionsStartCalledComputationsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func StablehloCustomCallOptionsAddCustomAttributes(builder *flatbuffers.Builder, customAttributes flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(customAttributes), 0)
}
func StablehloCustomCallOptionsStartCustomAttributesVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(1, numElems, 1)
}
func StablehloCustomCallOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
