// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type StablehloReduceOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsStablehloReduceOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloReduceOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &StablehloReduceOptions{}
	x.Init(buf, n+offset)
	return x
}

func FinishStablehloReduceOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsStablehloReduceOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloReduceOptions {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &StablehloReduceOptions{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedStablehloReduceOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *StablehloReduceOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *StablehloReduceOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *StablehloReduceOptions) Dimensions(j int) int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt64(a + flatbuffers.UOffsetT(j*8))
	}
	return 0
}

func (rcv *StablehloReduceOptions) DimensionsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloReduceOptions) MutateDimensions(j int, n int64) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt64(a+flatbuffers.UOffsetT(j*8), n)
	}
	return false
}

func (rcv *StablehloReduceOptions) BodySubgraphIndex() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *StablehloReduceOptions) MutateBodySubgraphIndex(n int32) bool {
	return rcv._tab.MutateInt32Slot(6, n)
}

func StablehloReduceOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func StablehloReduceOptionsAddDimensions(builder *flatbuffers.Builder, dimensions flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(dimensions), 0)
}
func StablehloReduceOptionsStartDimensionsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(8, numElems, 8)
}
func StablehloReduceOptionsAddBodySubgraphIndex(builder *flatbuffers.Builder, bodySubgraphIndex int32) {
	builder.PrependInt32Slot(1, bodySubgraphIndex, 0)
}
func StablehloReduceOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
