// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type StablehloCompareOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsStablehloCompareOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloCompareOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &StablehloCompareOptions{}
	x.Init(buf, n+offset)
	return x
}

func FinishStablehloCompareOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsStablehloCompareOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloCompareOptions {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &StablehloCompareOptions{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedStablehloCompareOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *StablehloCompareOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *StablehloCompareOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *StablehloCompareOptions) ComparisonDirection() StablehloComparisonDirection {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return StablehloComparisonDirection(rcv._tab.GetUint32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *StablehloCompareOptions) MutateComparisonDirection(n StablehloComparisonDirection) bool {
	return rcv._tab.MutateUint32Slot(4, uint32(n))
}

func (rcv *StablehloCompareOptions) CompareType() StablehloComparisonType {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return StablehloComparisonType(rcv._tab.GetUint32(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *StablehloCompareOptions) MutateCompareType(n StablehloComparisonType) bool {
	return rcv._tab.MutateUint32Slot(6, uint32(n))
}

func StablehloCompareOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func StablehloCompareOptionsAddComparisonDirection(builder *flatbuffers.Builder, comparisonDirection StablehloComparisonDirection) {
	builder.PrependUint32Slot(0, uint32(comparisonDirection), 0)
}
func StablehloCompareOptionsAddCompareType(builder *flatbuffers.Builder, compareType StablehloComparisonType) {
	builder.PrependUint32Slot(1, uint32(compareType), 0)
}
func StablehloCompareOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
