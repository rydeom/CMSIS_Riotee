// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package tflite

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type StablehloDotGeneralOptions struct {
	_tab flatbuffers.Table
}

func GetRootAsStablehloDotGeneralOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloDotGeneralOptions {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &StablehloDotGeneralOptions{}
	x.Init(buf, n+offset)
	return x
}

func FinishStablehloDotGeneralOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsStablehloDotGeneralOptions(buf []byte, offset flatbuffers.UOffsetT) *StablehloDotGeneralOptions {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &StablehloDotGeneralOptions{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedStablehloDotGeneralOptionsBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *StablehloDotGeneralOptions) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *StablehloDotGeneralOptions) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *StablehloDotGeneralOptions) LhsBatchingDimensions(j int) int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt64(a + flatbuffers.UOffsetT(j*8))
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) LhsBatchingDimensionsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) MutateLhsBatchingDimensions(j int, n int64) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt64(a+flatbuffers.UOffsetT(j*8), n)
	}
	return false
}

func (rcv *StablehloDotGeneralOptions) RhsBatchingDimensions(j int) int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt64(a + flatbuffers.UOffsetT(j*8))
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) RhsBatchingDimensionsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) MutateRhsBatchingDimensions(j int, n int64) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt64(a+flatbuffers.UOffsetT(j*8), n)
	}
	return false
}

func (rcv *StablehloDotGeneralOptions) LhsContractingDimensions(j int) int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt64(a + flatbuffers.UOffsetT(j*8))
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) LhsContractingDimensionsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) MutateLhsContractingDimensions(j int, n int64) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt64(a+flatbuffers.UOffsetT(j*8), n)
	}
	return false
}

func (rcv *StablehloDotGeneralOptions) RhsContractingDimensions(j int) int64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetInt64(a + flatbuffers.UOffsetT(j*8))
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) RhsContractingDimensionsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) MutateRhsContractingDimensions(j int, n int64) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateInt64(a+flatbuffers.UOffsetT(j*8), n)
	}
	return false
}

func (rcv *StablehloDotGeneralOptions) PrecisionConfig(j int) StablehloPrecisionConfig {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return StablehloPrecisionConfig(rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4)))
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) PrecisionConfigLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *StablehloDotGeneralOptions) MutatePrecisionConfig(j int, n StablehloPrecisionConfig) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.MutateUint32(a+flatbuffers.UOffsetT(j*4), uint32(n))
	}
	return false
}

func StablehloDotGeneralOptionsStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func StablehloDotGeneralOptionsAddLhsBatchingDimensions(builder *flatbuffers.Builder, lhsBatchingDimensions flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(lhsBatchingDimensions), 0)
}
func StablehloDotGeneralOptionsStartLhsBatchingDimensionsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(8, numElems, 8)
}
func StablehloDotGeneralOptionsAddRhsBatchingDimensions(builder *flatbuffers.Builder, rhsBatchingDimensions flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(rhsBatchingDimensions), 0)
}
func StablehloDotGeneralOptionsStartRhsBatchingDimensionsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(8, numElems, 8)
}
func StablehloDotGeneralOptionsAddLhsContractingDimensions(builder *flatbuffers.Builder, lhsContractingDimensions flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(lhsContractingDimensions), 0)
}
func StablehloDotGeneralOptionsStartLhsContractingDimensionsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(8, numElems, 8)
}
func StablehloDotGeneralOptionsAddRhsContractingDimensions(builder *flatbuffers.Builder, rhsContractingDimensions flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(rhsContractingDimensions), 0)
}
func StablehloDotGeneralOptionsStartRhsContractingDimensionsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(8, numElems, 8)
}
func StablehloDotGeneralOptionsAddPrecisionConfig(builder *flatbuffers.Builder, precisionConfig flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(precisionConfig), 0)
}
func StablehloDotGeneralOptionsStartPrecisionConfigVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func StablehloDotGeneralOptionsEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
